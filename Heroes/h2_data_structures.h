#ifndef H2_DATA_STRUCTURES
#define H2_DATA_STRUCTURES

//from ironfist

#pragma pack(push, 1)
struct fullMap
	{
	mapCell *tiles;
	mapCellExtra *cellExtras;
	int width;
	int height;
	int numCellExtras;
	};
#pragma pack(pop)

#pragma pack(push, 1)
struct mapCell
	{
	__int16 groundIndex;
	char bitfield_1_hasObject_1_isRoad_6_objTileset;
	__int8 objectIndex;
	unsigned __int16 field_4_1_1_isShadow_1_13_extraInfo;
	char field__1_hasOverlay_1_hasLateOverlay_6_overlayTileset;
	char overlayIndex;
	char displayFlags;
	char objType;
	__int16 extraIdx;
	int objLink;
	int ovrLink;
	};
#pragma pack(pop)
#pragma pack(push, 1)
struct mapCellExtra
	{
	__int16 nextIdx;
	unsigned __int8 _1_q_7_objTileset;
	char objectIndex;
	char field_4;
	char _1_q_1_hasLateOverlay_6_q;
	char field_6;
	};
#pragma pack(pop)
#pragma pack(push, 1)
struct mapCellExtra
	{
	__int16 nextIdx;
	char _1_animatedObject_7_objTileset;
	signed __int8 objectIndex;
	char field_4_1_1_1_isShadow_5;
	char _1_animatedLateOverlay_1_hasLateOverlay_6_lateOverlayTileset;
	char overlayIndex;
	int objLink;
	int ovrLink;
	};
#pragma pack(pop)

enum RESOURCE_TYPE : __int16
	{
	RESOURCE_TYPE_BITMAP = 0x0,
	RESOURCE_TYPE_ICN = 0x1,
	RESOURCE_TYPE_PALETTE = 0x2,
	RESOURCE_TYPE_TILESET = 0x3,
	RESOURCE_TYPE_FONT = 0x5,
	RESOURCE_TYPE_SAMPLE = 0x6,
	};
struct resourceVtable
	{
	//int(__thiscall *scalarDeletingDestructor)(resource *this, char);
	};
struct resource
	{
	resourceVtable *vtable;
	RESOURCE_TYPE resourceType;
	__int16 referenceCount;
	unsigned int fileID;
	resource *next;
	};

struct IconEntry
	{
	__int16 offsetX;
	__int16 offsetY;
	__int16 width;
	__int16 height;
	char someSortOfLength; //someSortOfLength & 0x1F == number of animation frames
	int off;
	};

struct icon
	{
	resourceVtable *vtable;
	RESOURCE_TYPE resourceType;
	__int16 referenceCount;
	int fileID;
	resource *next;
	__int16 numSprites;
	IconEntry *headersAndImageData;
	};

/*  249 */
#pragma pack(push, 1)
struct overlay
	{
	int idx;
	int idx2;
	int ordinal;
	OBJ_TILESET tileset;
	OVERLAY_CATEGORY category;
	__int16 field_E;
	char iconIdxGap;
	__int64 intersectsTileMask;
	int terrainObjCategoryMask;
	int allowedTerrainPlacementMask;
	__int64 coveredNonObstructedMask;
	__int64 shadowsMask;
	__int64 animatedOverlay;
	__int64 field_39;
	char townColorOrMineColor;
	char field_42;
	__int64 interactionPointMask;
	char field_4B;
	ADVENTURE_MAP_LOCATION locationType;
	char field_4D;
	int field_4E;
	char fullGridIconIndices[48];
	};
#pragma pack(pop)

struct armyGroup
	{
	char creatureTypes[5];
	__int16 quantities[5];
	};

struct hero
	{
	__int16 spellpoints;
	char idx;
	char ownerIdx;
	char field_4;
	char field_5;
	char field_6;
	char field_7;
	char field_8;
	char field_9;
	char name[13];
	char factionID;
	char heroID;
	int x;
	int y;
	__int16 field_21;
	__int16 field_23;
	__int16 field_25;
	__int16 field_27;
	__int16 field_29;
	__int16 field_2B;
	__int16 occupiedObjType;
	__int16 occupiedObjVal;
	int remainingMobility;
	int mobility;
	int experience;
	__int16 oldLevel;
	char primarySkills[4];
	char field_43;
	char tempMoraleBonuses;
	char tempLuckBonuses;
	char _2[30];
	char wisdomLastOffered;
	armyGroup army;
	char secondarySkillLevel[14];
	char skillIndex[14];
	int numSecSkillsKnown;
	char spellsLearned[65];
	char artifacts[14];
	char flags1;
	char flags2;
	char flags3;
	char flags4;
	char isCaptain;
	int field_E8;
	char scrollSpell[14];
	};

/*  250 */
enum OVERLAY_CATEGORY : __int8
	{
	OVERLAY_CATEGORY_TERRAIN = 0,
	OVERLAY_CATEGORY_TREASURE = 1,
	OVERLAY_CATEGORY_CREATURE = 2,
	OVERLAY_CATEGORY_ARTIFACT = 3,
	OVERLAY_CATEGORY_TOWN = 5,
	OVERLAY_CATEGORY_HERO = 7,
	};

/*  251 */
enum TERRAIN_BMASK2 : __int32
	{
	MASK_TERRAIN_WATER = 1,
	MASK_TERRAIN_GRASS = 2,
	MASK_TERRAIN_SNOW = 4,
	MASK_TERRAIN_SWAMP = 8,
	MASK_TERRAIN_LAVA = 16,
	MASK_TERRAIN_DESERT = 32,
	MASK_TERRAIN_DIRT = 64,
	MASK_TERRAIN_WASTELAND = 128,
	MASK_TERRAIN_BEACH = 256,
	};

/*  252 */
enum OBJ_TILESET : __int8
	{
	TILESET_HAUNTED = 10,
	TILESET_ARTIFACT = 11,
	TILESET_MONSTER = 12,
	TILESET_ARTIFACT_TAKEN = 13,
	TILESET_FLAG = 14,
	TILESET_RESOURCE_DISPLAY = 15,
	TILESET_HOURGLASS = 16,
	TILESET_ROUTE = 17,
	TILESET_STONBACK = 19,
	TILESET_MONSTER_ANIMATION = 20,
	TILESET_HERO = 21,
	TILESET_SNOW_MOUNTAIN = 22,
	TILESET_SWAMP_MOUNTAIN = 23,
	TILESET_LAVA_MOUNTAIN = 24,
	TILESET_DESERT_MOUNTAIN = 25,
	TILESET_DIRT_MOUNTAIN = 26,
	TILESET_MOUNTAIN_MULTIPLE = 27,
	TILESET_EXTRA_OVERLAY = 29,
	TILESET_ROAD = 30,
	TILESET_MOUNTAIN_CRACKED = 31,
	TILESET_MOUNTAIN_GRASS = 32,
	TILESET_TREE_JUNGLE = 33,
	TILESET_TREE_EVIL = 34,
	TILESET_OBJ_TOWN = 35,
	TILESET_TOWN_TERRAIN = 36,
	TILESET_TOWN_SHADOW = 37,
	TILESET_TOWN_RANDOM = 38,
	TILESET_OBJECT_EXTRA = 39,
	TILESET_OBJECT_WATER_2 = 40,
	TILESET_OBJECT_MULTIPLE_2 = 41,
	TILESET_OBJECT_TREE_SNOW = 42,
	TILESET_OBJECT_TREE_FIR = 43,
	TILESET_OBJECT_TREE_FALL = 44,
	TILESET_OBJECT_STREAM = 45,
	TILESET_OBJECT_RESOURCE = 46,
	TILESET_OBJECT_DUMMY = 47,
	TILESET_OBJECT_GRASS_2 = 48,
	TILESET_OBJECT_TREE_DECIDUOUS = 49,
	TILESET_OBJECT_WATER = 50,
	TILESET_OBJECT_GRASS = 51,
	TILESET_OBJECT_SNOW = 52,
	TILESET_OBJECT_SWAMP = 53,
	TILESET_OBJECT_LAVA = 54,
	TILESET_OBJECT_DESERT = 55,
	TILESET_OBJECT_DIRT = 56,
	TILESET_OBJECT_CRACKED = 57,
	TILESET_OBJECT_LAVA_3 = 58,
	TILESET_OBJECT_MULTIPLE = 59,
	TILESET_OBJECT_LAVA_2 = 60,
	TILESET_OBJECT_EXPANSION_1 = 61,
	TILESET_OBJECT_EXPANSION_2 = 62,
	TILESET_OBJECT_EXPANSION_3 = 63,
	};


enum ADVENTURE_MAP_LOCATION
	{
	LOCATION_ALCHEMIST_LAB = 1,
	LOCATION_SIGN = 2,
	LOCATION_BUOY = 3,
	LOCATION_SKELETON = 4,
	LOCATION_DAEMON_CAVE = 5,
	LOCATION_TREASURE_CHEST = 6,
	LOCATION_FAERIE_RING = 7,
	LOCATION_CAMPFIRE = 8,
	LOCATION_FOUNTAIN = 9,
	LOCATION_GAZEBO = 10,
	LOCATION_ANCIENT_LAMP = 11,
	LOCATION_GRAVEYARD = 12,
	LOCATION_ARCHERS_HOUSE = 13,
	LOCATION_GOBLIN_HUT = 14,
	LOCATION_DWARF_COTTAGE = 15,
	LOCATION_PEASANT_HUT = 16,
	LOCATION_LOG_CABIN = 17,
	LOCATION_ROAD = 18,
	LOCATION_EVENT = 19,
	LOCATION_DRAGON_CITY = 20,
	LOCATION_LIGHTHOUSE = 21,
	LOCATION_WATERWHEEL = 22,
	LOCATION_MINE = 23,
	LOCATION_ARMY_CAMP = 24,
	LOCATION_OBELISK = 25,
	LOCATION_OASIS = 26,
	LOCATION_RESOURCE = 27,
	LOCATION_SAWMILL = 29,
	LOCATION_ORACLE = 30,
	LOCATION_SHRINE_FIRST = 31,
	LOCATION_SHIPWRECK = 32,
	LOCATION_SEA_CHEST = 33,
	LOCATION_DESRT_TENT = 34,
	LOCATION_TOWN = 35,
	LOCATION_STONE_LITHS = 36,
	LOCATION_WAGON_CAMP = 37,
	LOCATION_WELL = 38,
	LOCATION_WHIRLPOOL = 39,
	LOCATION_WINDMILL = 40,
	LOCATION_ARTIFACT = 41,
	LOCATION_HERO = 42,
	LOCATION_BOAT = 43,
	LOCATION_RANDOM_ARTIFACT = 45,
	LOCATION_RANDOM_RESOURCE = 46,
	LOCATION_RANDOM_MONSTER = 47,
	LOCATION_RANDOM_TOWN = 48,
	LOCATION_RANDOM_CASTLE = 49,
	LOCATION_RANDOM_MONSTER_WEAK = 51,
	LOCATION_RANDOM_MONSTER_MEDIUM = 52,
	LOCATION_RANDOM_MONSTER_STRONG = 53,
	LOCATION_RANDOM_MONSTER_VERY_STRONG = 54,
	LOCATION_RANDOM_HERO = 55,
	LOCATION_NOTHING_SPECIAL = 56,
	LOCATION_WATCH_TOWER = 58,
	LOCATION_TREE_HOUSE = 59,
	LOCATION_TREE_CITY = 60,
	LOCATION_RUINS = 61,
	LOCATION_FORT = 62,
	LOCATION_TRADING_POST = 63,
	LOCATION_ABANDONED_MINE = 64,
	LOCATION_DWARF_CABIN = 65,
	LOCATION_STANDING_STONES = 66,
	LOCATION_IDOL = 67,
	LOCATION_TREE_OF_KNOWLEDGE = 68,
	LOCATION_WITCH_DOCTORS_HUT = 69,
	LOCATION_TEMPLE = 70,
	LOCATION_HILL_FORT = 71,
	LOCATION_HALFLING_HOLE = 72,
	LOCATION_MERCENARY_CAMP = 73,
	LOCATION_SHRINE_SECOND_ORDER = 74,
	LOCATION_SHRINE_THIRD_ORDER = 75,
	LOCATION_PYRAMID = 76,
	LOCATION_CITY_OF_DEAD = 77,
	LOCATION_EXCAVATION = 78,
	LOCATION_SPHINX = 79,
	LOCATION_WAGON = 80,
	LOCATION_TAR_PIT = 81,
	LOCATION_ARTESIAN_SPRING = 82,
	LOCATION_TROLL_BRIDGE = 83,
	LOCATION_WATERING_HOLE = 84,
	LOCATION_WITCH_HUT = 85,
	LOCATION_XANADU = 86,
	LOCATION_CAVE = 87,
	LOCATION_LEAN_TO = 88,
	LOCATION_MAGELLANS_MAPS = 89,
	LOCATION_FLOTSAM = 90,
	LOCATION_DERELICT_SHIP = 91,
	LOCATION_SHIPWRECK_SURVIVOR = 92,
	LOCATION_BOTTLE = 93,
	LOCATION_MAGIC_WELL = 94,
	LOCATION_MAGIC_GARDEN = 95,
	LOCATION_OBSERVATION_TOWER = 96,
	LOCATION_FREEMANS_FOUNDRY = 97,
	LOCATION_STREAM = 98,
	LOCATION_TREES = 99,
	LOCATION_MOUNTAINS = 100,
	LOCATION_VOLCANO = 101,
	LOCATION_FLOWERS = 102,
	LOCATION_ROCK = 103,
	LOCATION_LAKE = 104,
	LOCATION_MANDRAKE = 105,
	LOCATION_DEAD_TREE = 106,
	LOCATION_STUMP = 107,
	LOCATION_CRATER = 108,
	LOCATION_CACTUS = 109,
	LOCATION_MOUND = 110,
	LOCATION_DUNE = 111,
	LOCATION_LAVA_POOL = 112,
	LOCATION_SHRUB = 113,
	LOCATION_HOLE = 114,
	LOCATION_OUTCROPPING = 115,
	LOCATION_RANDOM_ARTIFACT_TREASURE = 116,
	LOCATION_RANDOM_ARTIFACT_MINOR = 117,
	LOCATION_RANDOM_ARTIFACT_MAJOR = 118,
	LOCATION_BARRIER = 119,
	LOCATION_TRAVELLER_TENT = 120,
	LOCATION_EXPANSION_DWELLING = 121,
	LOCATION_ALCHEMIST_TOWER = 122,
	LOCATION_JAIL = 123,
	TILE_HAS_EVENT = 128,
	};


	enum RESOURCE
		{
		RESOURCE_WOOD = 0x0,
		RESOURCE_MERCURY = 0x1,
		RESOURCE_ORE = 0x2,
		RESOURCE_SULFUR = 0x3,
		RESOURCE_CRYSTAL = 0x4,
		RESOURCE_GEMS = 0x5,
		RESOURCE_GOLD = 0x6,
		};

	enum BUILDING_CODE : __int8
		{
		BUILDING_MAGE_GUILD = 0x0,
		BUILDING_THIEVES_GUILD = 0x1,
		BUILDING_TAVERN = 0x2,
		BUILDING_DOCK = 0x3,
		BUILDING_WELL = 0x4,
		BUILDING_TENT = 0x5,
		BUILDING_CASTLE = 0x6,
		BUILDING_STATUE = 0x7,
		BUILDING_LEFT_TURRET = 0x8,
		BUILDING_RIGHT_TURRET = 0x9,
		BUILDING_MARKET = 0xA,
		BUILDING_SPECIAL_GROWTH = 0xB,
		BUILDING_MOAT = 0xC,
		BUILDING_SPECIAL = 0xD,
		BUILDING_BOAT = 0xE,
		BUILDING_CAPTAIN = 0xF,
		BUILDING_EXT_0 = 0x10,
		BUILDING_EXT_1 = 0x11,
		BUILDING_EXT_2 = 0x12,
		BUILDING_DWELLING_1 = 0x13,
		BUILDING_DWELLING_2 = 0x14,
		BUILDING_DWELLING_3 = 0x15,
		BUILDING_DWELLING_4 = 0x16,
		BUILDING_DWELLING_5 = 0x17,
		BUILDING_DWELLING_6 = 0x18,
		BUILDING_UPGRADE_1 = 0x19,
		BUILDING_UPGRADE_2 = 0x1A,
		BUILDING_UPGRADE_3 = 0x1B,
		BUILDING_UPGRADE_4 = 0x1C,
		BUILDING_UPGRADE_5 = 0x1D,
		BUILDING_UPGRADE_5B = 0x1E,
		BUILDING_EXT_3 = 0x1F,
		};


	enum CREATURES
		{
		CREATURE_PEASENT = 0,
		CREATURE_ARCHER = 1,
		CREATURE_RANGER = 2,
		CREATURE_PIKEMAN = 3,
		CREATURE_VETERAN_PIKEMAN = 4,
		CREATURE_SWORDSMAN = 5,
		CREATURE_MASTER_SWORDSMAN = 6,
		CREATURE_CAVALRY = 7,
		CREATURE_CHAMPION = 8,
		CREATURE_PALADIN = 9,
		CREATURE_CRUSADER = 10,
		CREATURE_GOBLIN = 11,
		CREATURE_ORC = 12,
		CREATURE_ORC_CHIEF = 13,
		CREATURE_WOLF = 14,
		CREATURE_OGRE = 15,
		CREATURE_OGRE_LORD = 16,
		CREATURE_TROLL = 17,
		CREATURE_WAR_TROLL = 18,
		CREATURE_CYCLOPS = 19,
		CREATURE_SPRITE = 20,
		CREATURE_DWARF = 21,
		CREATURE_BATTLE_DWARF = 22,
		CREATURE_ELF = 23,
		CREATURE_GRAND_ELF = 24,
		CREATURE_DRUID = 25,
		CREATURE_GREATER_DRUID = 26,
		CREATURE_UNICORN = 27,
		CREATURE_PHOENIX = 28,
		CREATURE_CENTAUR = 29,
		CREATURE_GARGOYLE = 30,
		CREATURE_GRIFFIN = 31,
		CREATURE_MINOTAUR = 32,
		CREATURE_MINOTAUR_KING = 33,
		CREATURE_HYDRA = 34,
		CREATURE_GREEN_DRAGON = 35,
		CREATURE_RED_DRAGON = 36,
		CREATURE_BLACK_DRAGON = 37,
		CREATURE_HALFLING = 38,
		CREATURE_BOAR = 39,
		CREATURE_IRON_GOLEM = 40,
		CREATURE_STEEL_GOLEM = 41,
		CREATURE_ROC = 42,
		CREATURE_MAGE = 43,
		CREATURE_ARCHMAGE = 44,
		CREATURE_GIANT = 45,
		CREATURE_TITAN = 46,
		CREATURE_SKELETON = 47,
		CREATURE_ZOMBIE = 48,
		CREATURE_MUTANT_ZOMBIE = 49,
		CREATURE_MUMMY = 50,
		CREATURE_ROYAL_MUMMY = 51,
		CREATURE_VAMPIRE = 52,
		CREATURE_VAMPIRE_LORD = 53,
		CREATURE_LICH = 54,
		CREATURE_POWER_LICH = 55,
		CREATURE_BONE_DRAGON = 56,
		CREATURE_ROGUE = 57,
		CREATURE_NOMAD = 58,
		CREATURE_GHOST = 59,
		CREATURE_GENIE = 60,
		CREATURE_MEDUSA = 61,
		CREATURE_EARTH_ELEMENTAL = 62,
		CREATURE_AIR_ELEMENTAL = 63,
		CREATURE_FIRE_ELEMENTAL = 64,
		CREATURE_WATER_ELEMENTAL = 65,
		};


	enum ARTIFACT
		{
		ARTIFACT_ULTIMATE_BOOK_OF_KNOWLEDGE = 0,
		ARTIFACT_ULTIMATE_SWORD_OF_DOMINION = 1,
		ARTIFACT_ULTIMATE_CLOAK_OF_PROTECTION = 2,
		ARTIFACT_ULTIMATE_WAND_OF_MAGIC = 3,
		ARTIFACT_ULTIMATE_SHIELD = 4,
		ARTIFACT_ULTIMATE_STAFF = 5,
		ARTIFACT_ULTIMATE_CROWN = 6,
		ARTIFACT_GOLDEN_GOOSE = 7,
		ARTIFACT_ARCANE_NECKLACE_OF_MAGIC = 8,
		ARTIFACT_CASTERS_BRACELET_OF_MAGIC = 9,
		ARTIFACT_MAGES_RING_OF_POWER = 10,
		ARTIFACT_WITCHS_BROACH_OF_MAGIC = 11,
		ARTIFACT_MEDAL_OF_VALOR = 12,
		ARTIFACT_MEDAL_OF_COURAGE = 13,
		ARTIFACT_MEDAL_OF_HONOR = 14,
		ARTIFACT_MEDAL_OF_DISTINCTION = 15,
		ARTIFACT_FIZBIN_OF_MISFOURTUNE = 16,
		ARTIFACT_THUNDER_MACE_OF_DOMINION = 17,
		ARTIFACT_ARMORED_GAUNTLETS_OF_PROTECTION = 18,
		ARTIFACT_DEFENDER_HELM_OF_PROTECTION = 19,
		ARTIFACT_GIANT_FLAIL_OF_DOMINION = 20,
		ARTIFACT_BALLISTA_OF_QUICKNESS = 21,
		ARTIFACT_STEALTH_SHIELD_OF_PROTECTION = 22,
		ARTIFACT_DRAGON_SWORD_OF_DOMINION = 23,
		ARTIFACT_POWER_AXE_OF_DOMINION = 24,
		ARTIFACT_DIVINE_BREASTPLATE_OF_PROTECTION = 25,
		ARTIFACT_MINOR_SCROLL_OF_KNOWLEDGE = 26,
		ARTIFACT_MAJOR_SCROLL_OF_KNOWLEDGE = 27,
		ARTIFACT_SUPERIOR_SCROLL_OF_KNOWLEDGE = 28,
		ARTIFACT_FOREMOST_SCROLL_OF_KNOWLEDGE = 29,
		ARTIFACT_ENDLESS_SACK_OF_GOLD = 30,
		ARTIFACT_ENDLESS_BAG_OF_GOLD = 31,
		ARTIFACT_ENDLESS_PURSE_OF_GOLD = 32,
		ARTIFACT_NOMAD_BOOTS_OF_MOBILITY = 33,
		ARTIFACT_TRAVELERS_BOOTS_OF_MOBILITY = 34,
		ARTIFACT_LUCKY_RABBITS_FOOT = 35,
		ARTIFACT_GOLDEN_HORSESHOE = 36,
		ARTIFACT_GAMBLERS_LUCKY_COIN = 37,
		ARTIFACT_FOUR_LEAF_CLOVER = 38,
		ARTIFACT_TRUE_COMPASS_OF_MOBILITY = 39,
		ARTIFACT_SAILORS_ASTROLABE_OF_MOBILITY = 40,
		ARTIFACT_EVIL_EYE = 41,
		ARTIFACT_ENCHANTED_HOURGLASS = 42,
		ARTIFACT_GOLD_WATCH = 43,
		ARTIFACT_SKULLCAP = 44,
		ARTIFACT_ICE_CLOAK = 45,
		ARTIFACT_FIRE_CLOAK = 46,
		ARTIFACT_LIGHTNING_HELM = 47,
		ARTIFACT_EVERCOLD_ICICLE = 48,
		ARTIFACT_EVERHOT_LAVA_ROCK = 49,
		ARTIFACT_LIGHTNING_ROD = 50,
		ARTIFACT_SNAKE_RING = 51,
		ARTIFACT_ANKH = 52,
		ARTIFACT_BOOK_OF_ELEMENTS = 53,
		ARTIFACT_ELEMENTAL_RING = 54,
		ARTIFACT_HOLY_PENDANT = 55,
		ARTIFACT_PENDANT_OF_FREE_WILL = 56,
		ARTIFACT_PENDANT_OF_LIFE = 57,
		ARTIFACT_SERENITY_PENDANT = 58,
		ARTIFACT_SEEING_EYE_PENDANT = 59,
		ARTIFACT_KINETIC_PENDANT = 60,
		ARTIFACT_PENDANT_OF_DEATH = 61,
		ARTIFACT_WAND_OF_NEGATION = 62,
		ARTIFACT_GOLDEN_BOW = 63,
		ARTIFACT_TELESCOPE = 64,
		ARTIFACT_STATESMANS_QUILL = 65,
		ARTIFACT_WIZARDS_HAT = 66,
		ARTIFACT_POWER_RING = 67,
		ARTIFACT_AMMO_CART = 68,
		ARTIFACT_TAX_LIEN = 69,
		ARTIFACT_HIDEOUS_MASK = 70,
		ARTIFACT_ENDLESS_POUCH_OF_SULFUR = 71,
		ARTIFACT_ENDLESS_VIAL_OF_MERCURY = 72,
		ARTIFACT_ENDLESS_POUCH_OF_GEMS = 73,
		ARTIFACT_ENDLESS_CORD_OF_WOOD = 74,
		ARTIFACT_ENDLESS_CART_OF_ORE = 75,
		ARTIFACT_ENDLESS_POUCH_OF_CRYSTAL = 76,
		ARTIFACT_SPIKED_HELM = 77,
		ARTIFACT_SPIKED_SHIELD = 78,
		ARTIFACT_WHITE_PEARL = 79,
		ARTIFACT_BLACK_PEARL = 80,
		ARTIFACT_MAGIC_BOOK = 81,
		ARTIFACT_SPELL_SCROLL = 86,
		ARTIFACT_ARM_OF_THE_MARTYR = 87,
		ARTIFACT_BREASTPLATE_OF_ANDURAN = 88,
		ARTIFACT_BROACH_OF_SHIELDING = 89,
		ARTIFACT_BATTLE_GARB_OF_ANDURAN = 90,
		ARTIFACT_CRYSTAL_BALL = 91,
		ARTIFACT_HEART_OF_FIRE = 92,
		ARTIFACT_HEART_OF_ICE = 93,
		ARTIFACT_HELMET_OF_ANDURAN = 94,
		ARTIFACT_HOLY_HAMMER = 95,
		ARTIFACT_LEGENDARY_SCEPTER = 96,
		ARTIFACT_MASTHEAD = 97,
		ARTIFACT_SPHERE_OF_NEGATION = 98,
		ARTIFACT_STAFF_OF_WIZARDRY = 99,
		ARTIFACT_SWORD_BREAKER = 100,
		ARTIFACT_SWORD_OF_ANDURAN = 101,
		ARTIFACT_SPADE_OF_NECROMANCY = 102,
		};

		enum TERRAIN_BMASK2 : __int32
			{
			MASK_TERRAIN_WATER = 1,
			MASK_TERRAIN_GRASS = 2,
			MASK_TERRAIN_SNOW = 4,
			MASK_TERRAIN_SWAMP = 8,
			MASK_TERRAIN_LAVA = 16,
			MASK_TERRAIN_DESERT = 32,
			MASK_TERRAIN_DIRT = 64,
			MASK_TERRAIN_WASTELAND = 128,
			MASK_TERRAIN_BEACH = 256,
			};

		/*   68 */
		enum TERRAIN_IDX
			{
			TERRAIN_IDX_WATER = 0x0,
			TERRAIN_IDX_GRASS = 0x1,
			TERRAIN_IDX_SNOW = 0x2,
			TERRAIN_IDX_SWAMP = 0x3,
			TERRAIN_IDX_LAVA = 0x4,
			TERRAIN_IDX_DESERT = 0x5,
			TERRAIN_IDX_DIRT = 0x6,
			TERRAIN_IDX_WASTELAND = 0x7,
			TERRAIN_IDX_BEACH = 0x8,
			};

#endif
